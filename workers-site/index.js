import { getAssetFromKV } from '@cloudflare/kv-asset-handler';

addEventListener('fetch', event => {
  event.respondWith(handleEvent(event));
});

async function handleEvent(event) {
  const url = new URL(event.request.url);
  const pathname = url.pathname;

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –¥–≤–æ–π–Ω–æ–≥–æ —Å–ª—ç—à–∞ –≤ URL
  if (pathname.includes('//')) {
    return new Response('404 - Page Not Found', { status: 404 });
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –æ—Ç Telegram
  if (pathname === '/webhook') {
    return await handleWebhook(event);
  }

  try {
    const response = await getAssetFromKV(event);
    return response;
  } catch (e) {
    return new Response('404 - Page Not Found', { status: 404 });
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ webhook –∑–∞–ø—Ä–æ—Å–æ–≤ –æ—Ç Telegram
async function handleWebhook(event) {
  const update = await event.request.json(); // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç Telegram
  console.log('Received update:', update); // –õ–æ–≥–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è

  if (update.message) {
    const chatId = update.message.chat.id;
    const firstName = update.message.from.first_name;
    const lastName = update.message.from.last_name;
    console.log('Chat ID:', chatId, 'Text:', update.message.text); // –õ–æ–≥–∏—Ä—É–µ–º Chat ID –∏ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è

    // –§–æ—Ä–º–∏—Ä—É–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    const welcomeMessage = `‚ú® –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, ${firstName} ${lastName}! ‚ú®

` +
                           `–í–∞—Å –ø—Ä–∏—è—Ç–Ω–æ —É–¥–∏–≤–∏—Ç –Ω–∞—à —Å–∞–ª–æ–Ω —Ä–µ—Å–Ω–∏—Ü BOSSY! üåü ` +
                           `–ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –ª—É—á—à–∏–µ —É—Å–ª—É–≥–∏ –ø–æ –Ω–∞—Ä–∞—â–∏–≤–∞–Ω–∏—é –∏ —É—Ö–æ–¥—É –∑–∞ —Ä–µ—Å–Ω–∏—Ü–∞–º–∏, ` +
                           `—á—Ç–æ–±—ã –ø–æ–¥—á–µ—Ä–∫–Ω—É—Ç—å –≤–∞—à—É –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—É—é –∫—Ä–∞—Å–æ—Ç—É.

` +
                           `–î–ª—è –∑–∞–ø–∏—Å–∏ –Ω–∞ –ø—Ä–æ—Ü–µ–¥—É—Ä—É, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ó–∞–ø–∏—Å–∞—Ç—å—Å—è"!`;

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
    if (update.message.text === '/start') {
      return await sendMessage(chatId, welcomeMessage, [
        [{ text: "–ó–∞–ø–∏—Å–∞—Ç—å—Å—è", url: "https://n1302516.yclients.com" }] // –ò–∑–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à URL
      ]);
    }
  } else {
    console.log('Received non-message update, ignoring.'); // –õ–æ–≥–∏—Ä—É–µ–º –Ω–µ–Ω—É–∂–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
  }

  return new Response('OK', { status: 200 }); // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —É—Å–ø–µ—à–Ω—ã–π —Å—Ç–∞—Ç—É—Å
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ Telegram
async function sendMessage(chatId, text, replyMarkup) {
  const userToken = USER_TOKEN;  // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è

  const url = `https://api.telegram.org/bot${userToken}/sendMessage`;

  const response = await fetch(url, {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json'
    },
    body: JSON.stringify({
      chat_id: chatId,
      text: text,
      reply_markup: {
        inline_keyboard: replyMarkup
      }
    })
  });

  return response; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç API Telegram
}
